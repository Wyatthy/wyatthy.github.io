<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/03/31/OpenCV+Libtorch+VC/"/>
      <url>/2022/03/31/OpenCV+Libtorch+VC/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.1024sou.com/article/630721.html">https://www.1024sou.com/article/630721.html</a> Libtorch</p><p><a href="https://blog.csdn.net/qq_41175905/article/details/80560429">https://blog.csdn.net/qq_41175905/article/details/80560429</a> 、<a href="https://blog.csdn.net/clover_my/article/details/89521568">https://blog.csdn.net/clover_my/article/details/89521568</a>  OpenCV+VS</p><h2 id="c10-Error，位于内存位置xxx-处-原因汇总："><a href="#c10-Error，位于内存位置xxx-处-原因汇总：" class="headerlink" title="c10::Error，位于内存位置xxx 处  原因汇总："></a>c10::Error，位于内存位置xxx 处  原因汇总：</h2><p>1.读取数据集的部分，少读了图片，有没读到的图片被处理时遍历到</p><p>2.你的BatchSize不是train_dataset_size的整除数</p><p>3.第一层全连接的参数设置的不对，注意算完连接数后还得乘个batchsize才是真的数量。</p><p>VS切换CUDA版本<a href="https://www.cnblogs.com/xingzhensun/p/9154094.html">https://www.cnblogs.com/xingzhensun/p/9154094.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>美剧台词</title>
      <link href="/2022/02/09/%E7%BE%8E%E5%89%A7%E5%8F%B0%E8%AF%8D/"/>
      <url>/2022/02/09/%E7%BE%8E%E5%89%A7%E5%8F%B0%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p>My heart is riding on fumes<br>我的心在燃烧</p><p>It is a soothing balm to my spent,scorched soul.<br>它是对我枯竭、焦灼的灵魂的抚慰剂</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Error汇总</title>
      <link href="/2022/02/09/%E5%90%84%E7%A7%8Derror/"/>
      <url>/2022/02/09/%E5%90%84%E7%A7%8Derror/</url>
      
        <content type="html"><![CDATA[<p>ImportError: cannot import name ‘_check_savefig_extra_args’ from ‘matplotlib.backend_bases’</p><p>重启jupyter</p><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cuda入门</title>
      <link href="/2022/02/09/cuda/"/>
      <url>/2022/02/09/cuda/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>首先要搞明白CUDA、CUDAToolkit….的关系</p><p>安装CUDA（cudatoolkit好像会顺带安上）</p><p>安装Pytorch</p><p>​    在<a href="https://pytorch.org/get-started/locally/#windows-installation">Pytorch官网</a>根据电脑环境生成<a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes">合适的</a>命令下载直接<code>pip install torch</code>会下错成CPU版(报错<code>Torch not compiled with CUDA enabled</code> 当时我看了官方站的<a href="https://discuss.pytorch.org/t/torch-not-compiled-with-cuda-enabled/112467">问答</a>才明白）</p><p>验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="language-bash">&gt;&gt; import torch</span></span><br><span class="line"><span class="meta">&gt;</span><span class="language-bash">&gt;&gt; torch.cuda.is_available()</span></span><br><span class="line">True</span><br><span class="line"><span class="meta">&gt;</span><span class="language-bash">&gt;&gt; torch.cuda.device_count()</span></span><br><span class="line">1</span><br><span class="line"><span class="meta">&gt;</span><span class="language-bash">&gt;&gt;</span></span><br></pre></td></tr></table></figure><p>共享存储器的应用：矩阵乘法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__global__ <span class="type">void</span> <span class="title">MatrixMulKernel</span><span class="params">(<span class="type">float</span>* Md, <span class="type">float</span>* Nd, <span class="type">float</span>* Pd, <span class="type">int</span> Width)</span></span>&#123;</span><br><span class="line">    __shared__ <span class="type">float</span> Mds[TILE_WIDTH][TILE_WIDTH];</span><br><span class="line">    __shared__ <span class="type">float</span> Nds[TILE_WIDTH][TILE_WIDTH];</span><br><span class="line">    <span class="type">int</span> bx = blockIdx.x;  <span class="type">int</span> by = blockIdx.y;</span><br><span class="line">    <span class="type">int</span> tx = threadIdx.x; <span class="type">int</span> ty = threadIdx.y;</span><br><span class="line">    <span class="type">int</span> Row = by * TILE_WIDTH + ty;</span><br><span class="line">    <span class="type">int</span> Col = bx * TILE_WIDTH + tx;</span><br><span class="line">    <span class="type">float</span> Pvalue = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> m = <span class="number">0</span>; m &lt; Width/TILE_WIDTH; ++m) &#123;</span><br><span class="line">        <span class="comment">//ty tx都是局限于线程所在的线程块   把Width宽的输入矩阵分成m个阶段 避免共享内存不够用</span></span><br><span class="line">        Mds[ty][tx] = Md[Row*Width + (m*TILE_WIDTH + tx)];</span><br><span class="line">        Nds[ty][tx] = Nd[Col + (m*TILE_WIDTH + ty)*Width];</span><br><span class="line">        __syncthreads();<span class="comment">//此处同步 将m阶段的Mds和Nds都填满了（TILE_WIDTH*TILE_WIDTH个线程共同的努力）</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; TILE_WIDTH; ++k)</span><br><span class="line">            Pvalue += Mds[ty][k] * Nds[k][tx];</span><br><span class="line">        __synchthreads();</span><br><span class="line">    &#125;</span><br><span class="line">    Pd[Row*Width+Col] = Pvalue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> CUDA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo配置</title>
      <link href="/2022/02/09/hexo%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/02/09/hexo%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="入手"><a href="#入手" class="headerlink" title="入手"></a>入手</h1><h2 id="一、安装好Node-js和Hexo"><a href="#一、安装好Node-js和Hexo" class="headerlink" title="一、安装好Node.js和Hexo"></a>一、安装好Node.js和Hexo</h2><p>Hexo基于Node.js，下载地址：<a href="https://nodejs.org/en/download/">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测是否安装成功，在命令行中输入 node -v 和npm -v以检测。</p><p>到这了，安装Hexo的环境已经全部搭建完成。</p><p>使用npm命令安装Hexo，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h2><blockquote><p>站点配置文件：<code>D:\Blog\_config.yml</code></p><p>主题配置文件：<code>D:\Blog\themes\next\_config.yml</code></p><p>命令简写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署</span></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure></blockquote><p>新建仓库，命名为：<code>xxx.github.io</code>（固定用法）</p><p>本地建文件夹，进入目录初始化Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>此时可以使用 <code>hexo s</code>进行预览</p><p>将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:Wyatthy/wyatthy.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>这时，我们分别输入三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>hexo d 就是部署网站命令。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="http://xxxx.github.io/">http://xxxx.github.io</a></p><h2 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h2><h3 id="添加tags页面"><a href="#添加tags页面" class="headerlink" title="添加tags页面"></a>添加tags页面</h3><p>在主题配置文件的menu setting 中把tags属性去掉注释</p><p>创建一个<code>tags</code>页面：在<code>Hexo\Blog</code>目录下右键打开<code>Git Bush</code>，输入<code>hexo new page tags</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">theigrams@Theigrams MINGW64 /c/D/Hexo/Blog</span><br><span class="line">$ hexo new page tags</span><br><span class="line">INFO  Created: C:\D\Hexo\Blog\<span class="built_in">source</span>\tags\index.md</span><br></pre></td></tr></table></figure><p>这时候你的<code>source/</code>下会生成 <code>tags/index.md</code> 文件，我们将其打开，然后在最后面加上两行：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>这时候你要为你的文章打上标签就可以在文章的头部写上：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Tag1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Tag2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Tag3</span></span><br></pre></td></tr></table></figure><h3 id="添加分类和自我介绍"><a href="#添加分类和自我介绍" class="headerlink" title="添加分类和自我介绍"></a>添加分类和自我介绍</h3><p>同上，先把 <code>categories</code> <code>about</code> 前的注释符 <code>#</code> 删了，然后创建页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>打开<code>categories/index.md</code> 和 <code>about/index.md</code> 文件，在最下面加上分别两行：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>这时候你就可以给你的文章归类存档了，使用方式就是在你的文章的头部加上：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">    - 分类1</span><br></pre></td></tr></table></figure><h3 id="正文预览"><a href="#正文预览" class="headerlink" title="正文预览"></a>正文预览</h3><p>文章插入<code>&lt;!-- more --&gt;</code></p><h1 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h1><h2 id="修改文档底部分类样式"><a href="#修改文档底部分类样式" class="headerlink" title="修改文档底部分类样式"></a>修改文档底部分类样式</h2><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>或者<code>tag_indicate</code>，将 <code>#</code> 换成或者将<code>tag_indicate</code> Set成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h2 id="去掉博客底部powered-by"><a href="#去掉博客底部powered-by" class="headerlink" title="去掉博客底部powered by"></a>去掉博客底部powered by</h2><p>把<code>\themes\next\layout\_partials\footer.swig</code>中的<code>if theme.footer.powered</code>句段用<code>&#123;# #&#125;</code>注释掉</p><h2 id="开启站点统计"><a href="#开启站点统计" class="headerlink" title="开启站点统计"></a>开启站点统计</h2><p>我是用的是百度统计，注册百度统计后绑定你的博客网址，得到代码，拿到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hm.src = &quot;https://hm.baidu.com/hm.js?xxxxxxxxx&quot;;</span><br></pre></td></tr></table></figure><p>代码段中的<code>xxxxxxxxxxx</code>，将其添加到主题配置文件<code>_config.yml</code>的<code>baidu_analytics</code>后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Baidu Analytics</span><br><span class="line">baidu_analytics: xxxxxxxxxxxxxxx # &lt;app_id&gt;</span><br></pre></td></tr></table></figure><p>就好了</p><h2 id="添加站内搜索"><a href="#添加站内搜索" class="headerlink" title="添加站内搜索"></a>添加站内搜索</h2><p>安装<code>hexo-generator-searchdb</code>插件  <a href="https://github.com/wzpan/hexo-generator-search">github地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>编辑<code>_config.yml</code>站点配置文件，新增以下内容到任意位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>编辑<code>themes/next/_config.yml</code> 主题配置文件，启用本地搜索功能,将<code>local_search:</code>下面的<code>enable:</code>的值，改成<code>true</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h1 id="移植到新电脑"><a href="#移植到新电脑" class="headerlink" title="移植到新电脑"></a>移植到新电脑</h1><p>git clone 博客仓库</p><p>完成入手篇的第一节即下载完hexo之后在新的博客路径下执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>将原来博客文件夹中的<br>_config.yml<br>theme/<br>source/<br>scaffolds/<br>package.json<br>.gitignore<br>复制到新的博客路径下</p><p>这就好了，先hexo g生成一下再hexo s预览一下看看效果  –End</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 配置流程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
